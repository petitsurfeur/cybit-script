#!/bin/sh
# System + MySQL backup script

# Full backup day - Sun (rest of the day do incremental backup)

# Copyright (c) 2005-2006 nixCraft <http://www.cyberciti.biz/fb/>
# This script is licensed under GNU GPL version 2.0 or above
# Automatically generated by http://bash.cyberciti.biz/backup/wizard-ftp-script.php

# ---------------------------------------------------------------------

### System Setup ###

DIRS="[FOLDER_TO_SAVE]"
BACKUP=/tmp/backup.$$

NOW=$(date +"%Y-%m-%d")
#NOW=$(date +"%d-%m-%Y")

INCFILE="[/home/XXX/tar-inc-backup.dat]"

DAY=$(date +"%a")
FULLBACKUP="Sun"

### MySQL Setup ###

MUSER="[SQL_USER]"
MPASS="[SQL_PASSRORD]"
MHOST="localhost"
MYSQL="$(which mysql)"
MYSQLDUMP="$(which mysqldump)"
GZIP="$(which gzip)"


### FTP Remote Server Setup ###
FTPD="[FTP_Folder]"
FTPU="[FTP_user],[FTP_password]"
FTPP="[FTP_password]"
FTPS="[FTP_IP_or_DNS]"
FTPPort="[FTP_PORT]"
NCFTP="$(which ncftpput)"

### Other stuff ###

EMAILID="[EMAIL]"

### Start Backup for file system ###

[ ! -d $BACKUP ] && mkdir -p $BACKUP || :

### See if we want to make a full backup ###

if [ "$DAY" == "$FULLBACKUP" ]; then
  FTPD="/full"
  FILE="fs-full-$NOW.tar.gz"
  tar -zcvf $BACKUP/$FILE $DIRS

else
  i=$(date +"%Hh%Mm%Ss")
  FILE="fs-i-$NOW-$i.tar.gz"
  tar -g $INCFILE -zcvf $BACKUP/$FILE $DIRS
fi

### Start MySQL Backup ###

# Get all databases name

DBS="$($MYSQL -u $MUSER -h $MHOST -p$MPASS -Bse 'show databases')"

for db in $DBS
do
 FILE=$BACKUP/mysql-$db.$NOW-$(date +"%T").gz
 $MYSQLDUMP -u $MUSER -h $MHOST -p$MPASS $db | $GZIP -9 > $FILE
 done

### Dump backup using FTP ###

#Start FTP backup using ncftp

set ftp:ssl-force true
set ssl:verify-certificate no
set ftp:ssl-allow false

lftp -u "$FTPU" -p "$FTPPort" "$FTPS" -e "mirror --reverse "$BACKUP" "$FTPD/$NOW""
exit
EOF

### Find out if ftp backup failed or not ###

if [ "$?" == "0" ]; then
 rm -f $BACKUP/*
else
 T=/tmp/backup.fail
 echo "Date: $(date)">$T
 echo "Hostname: $(hostname)" >>$T
 echo "Backup failed" >>$T
 mail  -s "BACKUP FAILED" "$EMAILID" <$T
 rm -f $T
fi

